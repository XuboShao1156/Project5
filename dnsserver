#!python3

# this file constructs the frontend of a dns server to serve dns request
import socketserver
import sys
import time

from mapping import map_replica
from dnslib import DNSRecord, RR, QTYPE, CLASS, A

PORT = sys.argv[1]
NAME = sys.argv[2]


class Server(socketserver.BaseRequestHandler):
    def handle(self) -> None:
        query, conn = DNSRecord.parse(self.request[0]), self.request[1]
        print('time: ' + time.strftime("%H:%M:%S", time.localtime()))
        print("request from: " + self.client_address[0])

        start = time.time()
        ans = query.reply()
        for q in query.questions:
            if q.qname == NAME:
                replica = map_replica(self.client_address[0])
                ans.add_answer(RR(q.qname, QTYPE.A, CLASS.IN, 60, A(replica)))
                print('answer: ' + replica)

        if len(ans.rr) != 0:
            conn.sendto(ans.pack(), self.client_address)
        print('total: ' + str(time.time() - start), end='\n\n')


if __name__ == '__main__':
    with socketserver.UDPServer(('0.0.0.0', int(PORT)), Server) as server:
        server.serve_forever()