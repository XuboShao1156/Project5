#!python3
import sys
import requests
import requests.utils
from cache import Cache, MEM_MIN_FREQ, DISK_LIMIT
from http.server import HTTPServer, BaseHTTPRequestHandler

PORT = int(sys.argv[1])
ORIGIN = sys.argv[2]

class CDNHTTP(BaseHTTPRequestHandler):
    lfucache = Cache(mem_min_freq=MEM_MIN_FREQ, disk_threshold=DISK_LIMIT)

    def do_GET(self, cache=lfucache):
        if self.path == '/grading/beacon':
            self.send_response(204)
            self.send_header("Content-Type", "text/html")
            self.end_headers()
            return

        page = requests.utils.unquote(self.path[1:])
        content = cache.get(page)
        if len(content) == 0:
            print('downloading from origin...')

            resp = requests.get('http://{}:8080/{}'.format(ORIGIN, page))
            if resp.status_code == 404:
                self.send_error(404, 'Page not Found')
                return

            content = resp.content
            cache.put(page, content)

        self.send_response(200)
        self.send_header("Content-Type", "text/html")
        self.end_headers()
        self.wfile.write(content)


if __name__ == '__main__':
    server = HTTPServer(('0.0.0.0', PORT), CDNHTTP)
    print('Serving on port %s' % PORT)

    try:
        server.serve_forever()
    finally:
        server.server_close()
